RED="\033[1;31m"
GREEN="\033[1;32m"
BLUE="\033[1;36m"
YELLOW="\033[1;33m"
RESET="\033[0m"

HTTPX_PORTS="80,443,2375,2376,3000,5000,5001,5672,7001,7002,7443,7070,7777,8000,8001,8002,8004,8080,8081,8089,8181,8282,8443,8880,8089,8888,8889,8983,9000,9001,9090,9091,9200,9443,9999,10000,10443,16000"

HTTPROBE_PORTS="-p http:80 -p https:443 -p http:2375 -p http:2376  -p http:2376  -p http:3000  -p http:5000  -p https:5001  \
    -p http:5672 -p http:7001  -p https:7001 -p http:7002  -p https:7002 -p https:7443 -p http:7070   -p https:7070 -p http:7777 \
    -p http:8000 -p http:8001  -p http:8002  -p http 8004  -p http:8080  -p http:8081  -p http:8089 \
    -p http:8181 -p http:8282  -p https:8443 -p http:8880  -p http:8888  -p http:8889  -p http:8983   -p http:9000  -p http:9001 \
    -p http:9090 -p http:9091  -p http:9200  -p https:9443 -p http:9999  -p http:10000 -p https:10443 -p http:16000"

# ffuf
function ffuf() {
  command ffuf -ic -v -c -ac -fc 301,302 -rate 100 -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0" "$@" | tee -a ffuf.out
}

# meg
function meg() {
  command meg -d 3000 -s 200 -s 401 -s 500 -v "$@" | tee -a meg.log
}

# gf autocompletion
compdef _gf gf
function _gf {
    _arguments "1: :($(gf -list))"
}

# httpx
# discover common web ports, grab page title, status, content type, web server,
# ip log to file
function httpx-web {
  httpx -follow-host-redirects \
    -status-code \
    -title \
    -content-type \
    -web-server \
    -ip \
    -silent \
    -ports ${=HTTPX_PORTS} | tee -a httpx.log
}

# httprobe - default web ports
function httprobe() {
  command httprobe ${=HTTPROBE_PORTS} | tee -a httprobe.log
}

# nuclei default templates
function nuclei-internal() {
  command nuclei -ut
  command nuclei \
    -t cves \
    -t default-logins \
    -t exposures \
    -t exposed-panels \
    -t exposed-tokens \
    -t misconfiguration \
    -t technologies \
    -t vulnerabilities \
    -t fuzzing \
    -t custom \
    -timeout 10 \
    -rl 100 \
    -stats \
    -o nuclei.log \
    "$@"
}

# nuclei autocompletion
compdef '_files -/ -W ~/nuclei-templates/' nuclei

# nmap scan services
function nmap-services() {
  while IFS=":" read -rA host; do
    nmap -sTV --version-all --open --append-output -oN "nmap_${host[1]}.nmap" -p $host[2] $host[1]
  done
}

# gau - filtered output
function gau-filtered() {
  command gau --subs --blacklist jpg,gif,svg,png,js,woff,css,ico,ttf,eof,eot,otf $1 | tee -a "${1},gau"
}


